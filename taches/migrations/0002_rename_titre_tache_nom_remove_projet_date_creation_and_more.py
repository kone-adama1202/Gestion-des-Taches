# Generated by Django 5.1.5 on 2025-02-20 01:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taches', '0001_initial'),
    ]

    operations = [
        migrations.RenameField(
            model_name='tache',
            old_name='titre',
            new_name='nom',
        ),
        migrations.RemoveField(
            model_name='projet',
            name='date_creation',
        ),
        migrations.RemoveField(
            model_name='tache',
            name='assignee',
        ),
        migrations.RemoveField(
            model_name='tache',
            name='date_debut',
        ),
        migrations.RemoveField(
            model_name='tache',
            name='date_fin',
        ),
        migrations.RemoveField(
            model_name='tache',
            name='est_terminee',
        ),
        migrations.RemoveField(
            model_name='tache',
            name='projet',
        ),
        migrations.AddField(
            model_name='projet',
            name='date_debut',
            field=models.DateField(default='2025-01-01'),
        ),
        migrations.AddField(
            model_name='projet',
            name='date_fin',
            field=models.DateField(default='2025-12-31'),
        ),
        migrations.AddField(
            model_name='tache',
            name='date_echeance',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='projet',
            name='nom',
            field=models.CharField(max_length=100),
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('etudiant', 'Ã‰tudiant'), ('professeur', 'Professeur')], max_length=10)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='tache',
            name='assigne_a',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='projet',
            name='createur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projets_crees', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='Profil',
        ),
    ]
